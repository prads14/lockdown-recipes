{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","recipe","url","id","href","target","className","src","snippet","thumbnails","medium","alt","channelTitle","style","height","width","title","substr","Date","publishedAt","toISOString","CardList","recipes","map","SearchBox","placeholder","searchHandler","type","onChange","App","onFilterHandler","e","state","users","setState","searchField","value","fetch","then","response","json","headers","data","this","filteredRecipes","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2QAkBeA,G,MAdF,SAAAC,GAAU,IACXC,EAAWD,EAAXC,OACFC,EAAM,mCAAmCD,EAAOE,GACtD,OACI,mBAAGC,KAAMF,EAAKG,OAAO,SAArB,SACA,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAKN,EAAOO,QAAQC,WAAWC,OAAOR,IAAKS,IAAKV,EAAOW,aAAcC,MAAO,CAACC,OAAQ,OAAQC,MAAO,WACzG,6BAAKd,EAAOO,QAAQQ,MAAMC,OAAO,EAAG,MACpC,4BAAI,IAAIC,KAAKjB,EAAOO,QAAQW,aAAaC,uBCKlCC,G,MAZE,SAAArB,GACb,OACI,qBAAKM,UAAU,YAAf,SAEIN,EAAMsB,QAAQC,KAAK,SAAAtB,GAAM,OACxB,cAAC,EAAD,CAAMA,OAAQA,GAAaA,EAAOE,WCChCqB,EATG,SAAC,GAAkC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,cAE7B,OACI,qBAAKb,MAAO,CAAC,QAAW,QAAxB,SACI,uBAAOc,KAAK,SAASF,YAAaA,EAAaG,SAAUF,EAAeb,MAAO,CAAC,QAAW,OAAQP,UAAU,cCoD1GuB,G,wDAnDb,aAAe,IAAD,8BACZ,gBA6BFC,gBAAkB,SAACC,GACH,EAAKC,MAAMC,MACzB,EAAKC,SAAS,CAACC,YAAaJ,EAAE1B,OAAO+B,SA9BrC,EAAKJ,MAAQ,CACXV,QAAS,GACTW,MAAO,GACPE,YAAa,IALH,E,gEAYO,IAAD,OAClBE,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAE,GAAI,OAAI,EAAKN,SAAS,CAAED,MAAQO,OAEtCH,MAAM,cACL,CACCI,QAAU,CACR,eAAgB,mBAChB,OAAU,sBAIbH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAI,GAAI,OAAI,EAAKR,SAAS,CAAEZ,QAASoB,S,+BAU/B,IAAD,SAC0BC,KAAKX,MAA9BV,EADD,EACCA,QAASa,EADV,EACUA,YAEXS,EAAkBtB,EAAQuB,QAAO,SAAA5C,GAAM,OAAIA,EAAOO,QAAQQ,MAAM8B,cAAcC,SAASZ,EAAYW,kBACzG,OACE,sBAAKxC,UAAU,MAAf,UACA,kDACE,cAAC,EAAD,CAAWmB,YAAY,eAAeC,cAAe,SAACK,GAAD,OAAO,EAAKD,gBAAgBC,MAC/E,cAAC,EAAD,CAAUT,QAAUsB,W,GA7CZI,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.892fdf99.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport \"../card/card.styles.css\";\r\n\r\nconst Card = props => {\r\n    const { recipe } = props;\r\n    const url = \"https://www.youtube.com/watch?v=\"+recipe.id\r\n    return(\r\n        <a href={url} target=\"_blank\">\r\n        <div className=\"card-container\">\r\n        <img src={recipe.snippet.thumbnails.medium.url} alt={recipe.channelTitle} style={{height: 'auto', width: '200px'}} />\r\n        <h2>{recipe.snippet.title.substr(0, 20)}</h2>\r\n        <p>{new Date(recipe.snippet.publishedAt).toISOString()}</p>\r\n        </div>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from '../card/card.component';\r\n\r\nimport \"./card-list.styles.css\"\r\n\r\nconst CardList = props => {\r\n    return (\r\n        <div className=\"card-list\">\r\n        {\r\n            props.recipes.map( recipe => (\r\n             <Card recipe={recipe} key={recipe.id} />\r\n            ))\r\n          }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({placeholder, searchHandler}) => {\r\n    \r\n    return(\r\n        <div style={{'padding': '10px'}}>\r\n            <input type=\"search\" placeholder={placeholder} onChange={searchHandler} style={{'padding': '1em'}} className=\"search\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox","import React, { Component } from 'react';\n\nimport CardList from \"./components/card-list/card-list.component\";\nimport SearchBox from \"./components/search-box/search-box.component\";\nimport './App.css';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      recipes: [],\n      users: [],\n      searchField: ''\n    }\n\n  //  this.onFilterHandler = this.onFilterHandler.bind(this)\n\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n    .then(response => response.json())\n    .then(json => this.setState({ users : json }) )\n\n    fetch('./data.json'\n    ,{\n      headers : { \n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n       }\n    }\n    )\n    .then(response => response.json())\n    .then(data => this.setState({ recipes: data}))\n\n  }\n\n  onFilterHandler = (e) => {\n    const users = this.state.users;\n    this.setState({searchField: e.target.value})\n   \n  }\n\n  render() {\n    const { recipes, searchField } = this.state;\n\n    const filteredRecipes = recipes.filter(recipe => recipe.snippet.title.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n      <h1>LOCKDOWN RECIPES</h1>\n        <SearchBox placeholder=\"Search Users\" searchHandler={(e) => this.onFilterHandler(e)}/>\n          <CardList recipes ={filteredRecipes}>\n          </CardList>\n    </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}